<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="sektorlerDs" targetNamespace="http://tempuri.org/sektorlerDs.xsd" xmlns:mstns="http://tempuri.org/sektorlerDs.xsd" xmlns="http://tempuri.org/sektorlerDs.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="DataConnectionString1" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DataConnectionString1 (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.FirmaRehber.Properties.Settings.GlobalReference.Default.DataConnectionString1" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SektorlerTableAdapter" GeneratorDataComponentClassName="SektorlerTableAdapter" Name="Sektorler" UserDataComponentName="SektorlerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataConnectionString1 (Settings)" DbObjectName="FirmaRehber.dbo.Sektorler" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Sektorler] WHERE (([Id] = @Original_Id) AND ((@IsNull_Sektor = 1 AND [Sektor] IS NULL) OR ([Sektor] = @Original_Sektor)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Sektor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sektor" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Sektor" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sektor" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Sektorler] ([Sektor]) VALUES (@Sektor);
SELECT Id, Sektor FROM Sektorler WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Sektor" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sektor" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, Sektor FROM dbo.Sektorler</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Sektorler] SET [Sektor] = @Sektor WHERE (([Id] = @Original_Id) AND ((@IsNull_Sektor = 1 AND [Sektor] IS NULL) OR ([Sektor] = @Original_Sektor)));
SELECT Id, Sektor FROM Sektorler WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Sektor" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sektor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Sektor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Sektor" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Sektor" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Sektor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="FirmaRehber.dbo.Sektorler" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="Sektor" DataSetColumn="Sektor" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AltSektorlerTableAdapter" GeneratorDataComponentClassName="AltSektorlerTableAdapter" Name="AltSektorler" UserDataComponentName="AltSektorlerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataConnectionString1 (Settings)" DbObjectName="FirmaRehber.dbo.AltSektorler" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[AltSektorler] WHERE (([Id] = @Original_Id) AND ((@IsNull_AltSektor = 1 AND [AltSektor] IS NULL) OR ([AltSektor] = @Original_AltSektor)) AND ((@IsNull_SektorRef = 1 AND [SektorRef] IS NULL) OR ([SektorRef] = @Original_SektorRef)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AltSektor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AltSektor" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AltSektor" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AltSektor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SektorRef" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SektorRef" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SektorRef" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SektorRef" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[AltSektorler] ([AltSektor], [SektorRef]) VALUES (@AltSektor, @SektorRef);
SELECT Id, AltSektor, SektorRef FROM AltSektorler WHERE (Id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AltSektor" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AltSektor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SektorRef" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SektorRef" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Id, AltSektor, SektorRef FROM dbo.AltSektorler</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[AltSektorler] SET [AltSektor] = @AltSektor, [SektorRef] = @SektorRef WHERE (([Id] = @Original_Id) AND ((@IsNull_AltSektor = 1 AND [AltSektor] IS NULL) OR ([AltSektor] = @Original_AltSektor)) AND ((@IsNull_SektorRef = 1 AND [SektorRef] IS NULL) OR ([SektorRef] = @Original_SektorRef)));
SELECT Id, AltSektor, SektorRef FROM AltSektorler WHERE (Id = @Id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AltSektor" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AltSektor" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@SektorRef" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SektorRef" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_AltSektor" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AltSektor" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AltSektor" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AltSektor" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_SektorRef" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SektorRef" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_SektorRef" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="SektorRef" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Id" ColumnName="Id" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="Id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Id" DataSetColumn="Id" />
              <Mapping SourceColumn="AltSektor" DataSetColumn="AltSektor" />
              <Mapping SourceColumn="SektorRef" DataSetColumn="SektorRef" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="sektorlerDs" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="sektorlerDs" msprop:Generator_UserDSName="sektorlerDs">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Sektorler" msprop:Generator_TableClassName="SektorlerDataTable" msprop:Generator_TableVarName="tableSektorler" msprop:Generator_TablePropName="Sektorler" msprop:Generator_RowDeletingName="SektorlerRowDeleting" msprop:Generator_UserTableName="Sektorler" msprop:Generator_RowChangingName="SektorlerRowChanging" msprop:Generator_RowEvHandlerName="SektorlerRowChangeEventHandler" msprop:Generator_RowDeletedName="SektorlerRowDeleted" msprop:Generator_RowEvArgName="SektorlerRowChangeEvent" msprop:Generator_RowChangedName="SektorlerRowChanged" msprop:Generator_RowClassName="SektorlerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="Sektor" msprop:Generator_ColumnVarNameInTable="columnSektor" msprop:Generator_ColumnPropNameInRow="Sektor" msprop:Generator_ColumnPropNameInTable="SektorColumn" msprop:Generator_UserColumnName="Sektor" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AltSektorler" msprop:Generator_TableClassName="AltSektorlerDataTable" msprop:Generator_TableVarName="tableAltSektorler" msprop:Generator_TablePropName="AltSektorler" msprop:Generator_RowDeletingName="AltSektorlerRowDeleting" msprop:Generator_UserTableName="AltSektorler" msprop:Generator_RowChangingName="AltSektorlerRowChanging" msprop:Generator_RowEvHandlerName="AltSektorlerRowChangeEventHandler" msprop:Generator_RowDeletedName="AltSektorlerRowDeleted" msprop:Generator_RowEvArgName="AltSektorlerRowChangeEvent" msprop:Generator_RowChangedName="AltSektorlerRowChanged" msprop:Generator_RowClassName="AltSektorlerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnId" msprop:Generator_ColumnPropNameInRow="Id" msprop:Generator_ColumnPropNameInTable="IdColumn" msprop:Generator_UserColumnName="Id" type="xs:int" />
              <xs:element name="AltSektor" msprop:Generator_ColumnVarNameInTable="columnAltSektor" msprop:Generator_ColumnPropNameInRow="AltSektor" msprop:Generator_ColumnPropNameInTable="AltSektorColumn" msprop:Generator_UserColumnName="AltSektor" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="SektorRef" msprop:Generator_ColumnVarNameInTable="columnSektorRef" msprop:Generator_ColumnPropNameInRow="SektorRef" msprop:Generator_ColumnPropNameInTable="SektorRefColumn" msprop:Generator_UserColumnName="SektorRef" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Sektorler" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
    <xs:unique name="AltSektorler_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AltSektorler" />
      <xs:field xpath="mstns:Id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="SektorAltSektor" msdata:parent="Sektorler" msdata:child="AltSektorler" msdata:parentkey="Id" msdata:childkey="SektorRef" msprop:Generator_UserChildTable="AltSektorler" msprop:Generator_ChildPropName="GetAltSektorlerRows" msprop:Generator_UserParentTable="Sektorler" msprop:Generator_UserRelationName="SektorAltSektor" msprop:Generator_RelationVarName="relationSektorAltSektor" msprop:Generator_ParentPropName="SektorlerRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>